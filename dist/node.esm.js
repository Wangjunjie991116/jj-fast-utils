const r=r=>{const t=10**(r-1),e=10**r-1;return`${Math.floor(Math.random()*(e-t+1))+t}`},t=r=>{const t=["零","一","二","三","四","五","六","七","八","九"],e=["","十","百","千","万","十","百","千","亿","十","百","千","万","十","百","千","亿"];if(!r||isNaN(r))return"零";const o=r.toString().split("");let n="";for(let r=0;r<o.length;r++){const a=o.length-1-r;n=e[r]+n;const s=o[a];n=t[Number(s)]+n}return n=n.replace(/零([千百十])/g,"零").replace(/十零/g,"十"),n=n.replace(/零+/g,"零"),n=n.replace(/零亿/g,"亿").replace(/零万/g,"万"),n=n.replace(/亿万/g,"亿"),n=n.replace(/零+$/,""),n=n.replace(/^一十/g,"十"),n},e=r=>{if("string"!=typeof r)throw new Error("color has to be type of `string`");if("#"===r.substr(0,1))return{hex:r,alpha:1};const t=r.replace(/\s+/g,""),e=/(.*?)rgb(a)?\((\d{1,3}),(\d{1,3}),(\d{1,3})(,([01]|1.0*|0?\.(\d*)))?\)/.exec(t);if(!e)throw new Error(`given color (${r}) isn't a valid rgb or rgba color`);const o=parseInt(e[3],10),n=parseInt(e[4],10),a=parseInt(e[5],10);let s=e[6]?/[\d.]+/.exec(e[6])[0]:"1";const c=(a|n<<8|o<<16|1<<24).toString(16).slice(1);return"."===s.substr(0,1)&&(s=parseFloat(`0${s}`)),s=parseFloat(Math.round(100*s))/100,{hex:`#${c.toString(16)}`,alpha:s}},o=r=>{const t=Object.prototype.toString.call(r).split(" ")[1];return t.substring(0,t.length-1).toLowerCase()},n=r=>/^[\w.!#$%&’*+/=?^`{|}~-]+@[a-zA-Z\d-]+(?:\.[a-zA-Z\d-]+)*$/.test(r),a=r=>{try{return JSON.parse(r),!0}catch(r){return!1}};export{r as generateNumberStr,o as getDataType,n as isEmail,a as isJSON,t as numberToChinese,e as rgbTohex};
//# sourceMappingURL=node.esm.js.map
